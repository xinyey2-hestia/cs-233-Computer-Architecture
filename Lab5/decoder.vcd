$date
	Sun Oct  1 17:11:01 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module decoder_test $end
$var wire 3 ! alu_op [2:0] $end
$var wire 1 " alu_src2 $end
$var wire 1 # except $end
$var wire 1 $ rd_src $end
$var wire 1 % writeenable $end
$var reg 6 & funct [5:0] $end
$var reg 6 ' opcode [5:0] $end
$scope module decoder $end
$var wire 1 ( addi $end
$var wire 3 ) alu_op [2:0] $end
$var wire 1 " alu_src2 $end
$var wire 1 * andi $end
$var wire 1 # except $end
$var wire 6 + funct [5:0] $end
$var wire 6 , opcode [5:0] $end
$var wire 1 - ori $end
$var wire 1 $ rd_src $end
$var wire 1 . sadd $end
$var wire 1 / sand $end
$var wire 1 0 snor $end
$var wire 1 1 sor $end
$var wire 1 2 ssub $end
$var wire 1 3 sxor $end
$var wire 1 % writeenable $end
$var wire 1 4 xori $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
04
03
02
01
00
0/
1.
0-
b0 ,
b100000 +
0*
b10 )
0(
b0 '
b100000 &
1%
0$
0#
0"
b10 !
$end
#10
b11 !
b11 )
0.
12
b100010 &
b100010 +
#30
1#
0%
b0 !
b0 )
02
b0 &
b0 +
b100 '
b100 ,
#40
0#
1%
b11 !
b11 )
12
b100010 &
b100010 +
b0 '
b0 ,
#60
b10 !
b10 )
1$
1"
02
b1000 '
b1000 ,
1(
#70
b100 !
b100 )
b1100 '
b1100 ,
0(
1*
#80
b101 !
b101 )
b1101 '
b1101 ,
0*
1-
#90
b111 !
b111 )
b1110 '
b1110 ,
0-
14
#100
